class Board
	
	@@secret_code = []
	@@guess = []
	@@code_colors = ["R", "P", "Y", "O", "B", "G"]
	@@feedback = []
	
end


class Game < Board
	
	def initialize
		Board.new
		@turns = 1
		@winner = false
		choose
	end

	private

	def intro
		puts "This is a Mastermind game. The available colors are: Red, Purple, Yellow, Orange, Blue and Green"
		puts "The secret code can be automatically generated by the computer, it is 4 character long and the colors cannot be repeated next to each other, but can appear 2 times in the full code."
		puts "Alternatively you can set the secret code and let the AI guess it."
		puts "Please choose if you would like to be the Codemaker or the Codebreaker. Write the choosen one into the console respectively."
	end

	def random_gen
		rand_col = []
		4.times do
			rand_col << @@code_colors[rand(6)]
			if rand_col.length > 1
				while rand_col[-1] == rand_col[-2]
				rand_col.pop
				rand_col << @@code_colors[rand(6)]
				end
			end
		end
		rand_col
	end

	def interact
		answ =""
		answ_arr = []
		check = false
		double = false
		while answ_arr.length != 4 || !check || !double
			puts "Give me 4 letter of R, P, Y, O, B, G. In a way as you think it is in the secret code."
			answ = gets.chomp.upcase
			answ_arr = answ.split(//)
			check = answ_arr.all? { |e| @@code_colors.include? e }
			if answ_arr[0] != answ_arr[1] && answ_arr[1] != answ_arr[2] && answ_arr[2] != answ_arr[3]
				double = true
			else
				puts "You repeted 2 characters next to each other. That is not allowed. Try again."
			end
		end
		answ_arr
	end
	
	def analyze
		@@feedback = []
		@@secret_code.each_with_index do |item, index|
			if item == @@guess[index]
				@@feedback << "B"
			elsif (@@guess.include? item)
				@@feedback << "W"				
			end
		end
	end

	def win
		if @@feedback == ["B", "B", "B", "B"]
			@winner = true
			return
		end
	end

	def final
		if @winner
			puts "Congratulation. The code got broken. You managed to encode the secret."
		else
			puts "The codemaker has won. The code is still a secret."
		end
	end

	def play_codebreaker
		puts "You choose to be the Codebreaker. To guess, you need to provide 4 of the starting letters of the avalilable colors. Like RPYO."
		puts "If you guessed both the color and position right, Black('B') will return and White('W') if only the color is correct."
		@@secret_code = random_gen
		while @turns < 13 && !@winner
			puts "This is the #{@turns}. turn out of 12 turns."
			@@guess = interact
			analyze
			print @@feedback
			puts ""
			win
			@turns += 1
		end
		final
	end

	def play_codemeaker
		puts "You choose to be the Codemaker. To guess, you need to provide 4 of the starting letters of the available colors. Like RPYO."
		@@secret_code = interact
		print @@secret_code
		puts ""
		puts "Now the AI starts to work on decoding."
		while !@winner
			@@guess = random_gen
			analyze
			win
			@turns += 1
		end
		print @@guess
		puts ""
		puts "The AI broke the code. It took #{@turns} guesses to figure it out."
	end

	def choose
		intro
		answ = gets.chomp.downcase
		if answ == "codebreaker"
			play_codebreaker
		elsif answ == "codemaker"
			play_codemeaker
		else
			puts "You opted out since didn't write codemaker or codebreaker into the console. Run the program again if you want to have fun."
		end
	end

end

mast = Game.new